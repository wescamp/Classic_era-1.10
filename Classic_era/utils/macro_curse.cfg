#textdomain wesnoth-Nightmares_of_Meloen

#define MACRO_OBJECT_DECREASE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will increase the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        [effect]
            apply_to=defense
            replace=false
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_OBJECT_REPLACE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will replace the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        [effect]
            apply_to=defense
            replace=true
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_MEMO_DEFENSE UNIT TERRAIN
    [store_unit]
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        variable=unit_memo_def
    [/store_unit]
    [set_variable]
        name=unit_memo_def.variables.memo_def.{TERRAIN}
        value=${UNIT}.defense.{TERRAIN}
    [/set_variable]
    [unstore_unit]
        variable=unit_memo_def
    [/unstore_unit]
    {CLEAR_VARIABLE unit_memo_def}
#enddef

#define MACRO_DECREASE_DEFENSE UNIT TERRAIN AMOUNT MAX_DEF
    # it is necessary each time to check if the defense becomes greater than 100 or the game may crash
    [set_variable]
        name=limit_for_addition
        value={MAX_DEF}
    [/set_variable]
    [set_variable]
        name=limit_for_addition
        add=-{AMOUNT}
    [/set_variable]

    {MACRO_MEMO_DEFENSE ({UNIT}) ({TERRAIN})}

    [if]
        [variable]
            name={UNIT}.defense.{TERRAIN}
            less_than=$limit_for_addition
        [/variable]
        [then]
            {MACRO_OBJECT_DECREASE_DEFENSE ({UNIT}) ({TERRAIN}) ({AMOUNT})}
        [/then]
        [else]
            {MACRO_OBJECT_REPLACE_DEFENSE ({UNIT}) ({TERRAIN}) ({MAX_DEF})}
        [/else]
    [/if]

    {CLEAR_VARIABLE limit_for_addition}
#enddef

#define MACRO_CURSE UNIT AMOUNT
    # Will decrease the defense of a given unit to a given amount,
    # on all terrains and to a minimum of 20%

    {MACRO_DECREASE_DEFENSE ({UNIT}) deep_water ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) shallow_water ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) reef ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) swamp_water ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) flat ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) sand ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) forest ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) hills ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) mountains ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) village ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) castle ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) cave ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) frozen ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) unwalkable ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) impassable ({AMOUNT}) 80}
    {MACRO_DECREASE_DEFENSE ({UNIT}) fungus ({AMOUNT}) 80}
#enddef

#define MACRO_UNCURSE UNIT
    # Gets the defense of a given unit back to before it was cursed
    [set_variable]
        name={UNIT}.defense.deep_water
        value=${UNIT}.variables.memo_def.deep_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.shallow_water
        value=${UNIT}.variables.memo_def.shallow_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.reef
        value=${UNIT}.variables.memo_def.reef
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.swamp_water
        value=${UNIT}.variables.memo_def.swamp_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.flat
        value=${UNIT}.variables.memo_def.flat
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.sand
        value=${UNIT}.variables.memo_def.sand
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.forest
        value=${UNIT}.variables.memo_def.forest
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.hills
        value=${UNIT}.variables.memo_def.hills
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.mountains
        value=${UNIT}.variables.memo_def.mountains
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.village
        value=${UNIT}.variables.memo_def.village
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.castle
        value=${UNIT}.variables.memo_def.castle
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.cave
        value=${UNIT}.variables.memo_def.cave
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.frozen
        value=${UNIT}.variables.memo_def.frozen
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.unwalkable
        value=${UNIT}.variables.memo_def.unwalkable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.impassable
        value=${UNIT}.variables.memo_def.impassable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.fungus
        value=${UNIT}.variables.memo_def.fungus
    [/set_variable]

    [unstore_unit]
        variable={UNIT}
    [/unstore_unit]
    {CLEAR_VARIABLE {UNIT}.variables.memo_def}
#enddef
